package models;

import java.math.BigInteger;
import java.util.Map;

/**
 * This class represents the "BlogHostPostStats" schema from the database.
 * @author collin
 *
 */
@Table("BlogHostPostStats")
public final class BlogHostPostStats extends Model
{
	@Column(columnName="post_id", methodName="setPostID", methodParameter=BigInteger.class, primaryKey=true)
	private BigInteger post_id;
	
	@Column(columnName="views", methodName="setViews", methodParameter=Integer.class)
	private Integer views;
	
	@Column(columnName="likes", methodName="setLikes", methodParameter=Integer.class)
	private Integer likes;
	
	/**
	 * Constructor. Creates a brand new BlogHostPostStats row.
	 * @param post_id
	 * @param views
	 * @param likes
	 */
	public BlogHostPostStats(BigInteger post_id, Integer views, Integer likes)
	{
		setPostID(post_id);
		setViews(views);
		setLikes(likes);
	}
	
	/**
	 * Constructor. This constructor is meant to be called when the
	 * parameters come from an existing row in a table of this schema.
	 * @param columnParameters column name to value mappings
	 */
	public BlogHostPostStats(Map<String, Object> columnParameters)
	{
		super(columnParameters);
	}

	/**
	 * Gets the post ID of this row.
	 * @return post_id
	 */
	public BigInteger getPostID()
	{
		return post_id;
	}

	/**
	 * Gets the views of this row.
	 * @return views
	 */
	public Integer getViews()
	{
		return views;
	}

	/**
	 * Gets the likes of this row.
	 * @return likes
	 */
	public Integer getLikes()
	{
		return likes;
	}

	/**
	 * Sets the post ID of this row.
	 * @param post_id Post ID
	 */
	public void setPostID(BigInteger post_id)
	{
		if(checkVariable(this.post_id, post_id))
		{
			changed = true;
			this.post_id = post_id;
		}
	}

	/**
	 * Sets the views of this row.
	 * @param views Views
	 */
	public void setViews(Integer views)
	{
		if(checkVariable(this.views, views))
		{
			changed = true;
			this.views = views;
		}
	}

	/**
	 * Sets the likes of this row.
	 * @param likes Likes
	 */
	public void setLikes(Integer likes)
	{
		if(checkVariable(this.likes, likes))
		{
			changed = true;
			this.likes = likes;
		}
	}
	
	protected void resetAutoGenerated()
	{
		
	}
	
	/**
	 * Checks if the given object is equal to this one.
	 * Two BlogHostPostStats are equal if their IDs are equal.
	 * @param other object for comparison
	 * @return true if they are equal, false otherwise
	 */
	@Override
	public boolean equals(Object other)
	{
		if(other instanceof BlogHostPostStats)
		{
			return getPostID().equals(((BlogHostPostStats) other).getPostID());
		}
		
		return false;
	}
}
