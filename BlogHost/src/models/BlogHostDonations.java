package models;

import java.math.BigDecimal;
import java.util.Map;

/**
 * This class represents the "BlogHostDonations" schema from the database.
 * @author collin
 *
 */
@Table("BlogHostDonations")
public final class BlogHostDonations extends Model
{
	/**
	 * Primary key. Auto increment from the database.
	 */
	@Column(columnName="id", methodName="setID", methodParameter=Integer.class, autoGenerated=true, primaryKey=true)
	private Integer id;
	
	@Column(columnName="subscriber_id", methodName="setSubscriberID", methodParameter=Integer.class)
	private Integer subscriber_id;
	
	@Column(columnName="creator_id", methodName="setCreatorID", methodParameter=Integer.class)
	private Integer creator_id;
	
	@Column(columnName="amount", methodName="setAmount", methodParameter=BigDecimal.class)
	private BigDecimal amount;
	
	/**
	 * Constructor. Creates a brand new BlogHostDonations row.
	 * @param subscriber_id
	 * @param creator_id
	 * @param amount
	 */
	public BlogHostDonations(Integer subscriber_id, Integer creator_id,
			BigDecimal amount)
	{
		resetAutoGenerated();
		setSubscriberID(subscriber_id);
		setCreatorID(creator_id);
		setAmount(amount);
	}
	
	/**
	 * Constructor. This constructor is meant to be called when the
	 * parameters come from an existing row in a table of this schema.
	 * @param columnParameters column name to value mappings
	 */
	public BlogHostDonations(Map<String, Object> columnParameters)
	{
		super(columnParameters);
	}

	/**
	 * Gets the ID of this row.
	 * @return id
	 */
	public Integer getID()
	{
		return id;
	}

	/**
	 * Gets the subscriber ID of this row.
	 * @return subscriber_id
	 */
	public Integer getSubscriberID()
	{
		return subscriber_id;
	}

	/**
	 * Gets the creator ID of this row.
	 * @return creator_id
	 */
	public Integer getCreatorID()
	{
		return creator_id;
	}

	/**
	 * Gets the amount of this row.
	 * @return amount
	 */
	public BigDecimal getAmount()
	{
		return amount;
	}

	/**
	 * Sets the ID of this row.
	 * Use this method with caution as some
	 * database schema ID's are managed
	 * automcatically.
	 * @param id ID
	 */
	public void setID(Integer id)
	{
		if(checkVariable(this.id, id))
		{
			changed = true;
			this.id = id;
		}
	}

	/**
	 * Sets the subscriber ID of this row.
	 * @param subscriber_id Subscriber ID
	 */
	public void setSubscriberID(Integer subscriber_id)
	{
		if(checkVariable(this.subscriber_id, subscriber_id))
		{
			changed = true;
			this.subscriber_id = subscriber_id;
		}
	}

	/**
	 * Sets the creator ID of this row.
	 * @param creator_id Creator ID
	 */
	public void setCreatorID(Integer creator_id)
	{
		if(checkVariable(this.creator_id, creator_id))
		{
			changed = true;
			this.creator_id = creator_id;
		}
	}

	/**
	 * Sets the amount of this row.
	 * @param amount Amount
	 */
	public void setAmount(BigDecimal amount)
	{
		if(checkVariable(this.amount, amount))
		{
			changed = true;
			this.amount = amount;
		}
	}
	
	protected void resetAutoGenerated()
	{
		setID(-1);
	}
	
	/**
	 * Checks if the given object is equal to this one.
	 * Two BlogHostDonations are equal if their IDs are equal.
	 * @param other object for comparison
	 * @return true if they are equal, false otherwise
	 */
	@Override
	public boolean equals(Object other)
	{
		if(other instanceof BlogHostDonations)
		{
			return getID().equals(((BlogHostDonations) other).getID());
		}
		
		return false;
	}
}
